# Test find_pivot
>>> from problem_2 import RotatedArray
>>> RotatedArray.find_pivot([0, 1, 2, 3, 4, 5, 6])
0
>>> RotatedArray.find_pivot([6, 0, 1, 2, 3, 4, 5])
1
>>> RotatedArray.find_pivot([5, 6, 0, 1, 2, 3, 4])
2
>>> RotatedArray.find_pivot([4, 5, 6, 0, 1, 2, 3])
3
>>> RotatedArray.find_pivot([3, 4, 5, 6, 0, 1, 2])
4
>>> RotatedArray.find_pivot([2, 3, 4, 5, 6, 0, 1])
5
>>> RotatedArray.find_pivot([1, 2, 3, 4, 5, 6, 0])
6



# Test search - unrotated
>>> from problem_2 import RotatedArray
>>> RotatedArray.rotated_array_search([0, 1, 2, 3, 4, 5, 6], 0)
0
>>> RotatedArray.rotated_array_search([0, 1, 2, 3, 4, 5, 6], 1)
1
>>> RotatedArray.rotated_array_search([0, 1, 2, 3, 4, 5, 6], 2)
2
>>> RotatedArray.rotated_array_search([0, 1, 2, 3, 4, 5, 6], 3)
3
>>> RotatedArray.rotated_array_search([0, 1, 2, 3, 4, 5, 6], 4)
4
>>> RotatedArray.rotated_array_search([0, 1, 2, 3, 4, 5, 6], 5)
5
>>> RotatedArray.rotated_array_search([0, 1, 2, 3, 4, 5, 6], 6)
6
>>> RotatedArray.rotated_array_search([0, 1, 2, 3, 4, 5, 6], 100)
-1





# Test search
>>> from problem_2 import RotatedArray
>>> RotatedArray.rotated_array_search([3, 4, 5, 6, 0, 1, 2], 0)
4
>>> RotatedArray.rotated_array_search([3, 4, 5, 6, 0, 1, 2], 1)
5
>>> RotatedArray.rotated_array_search([3, 4, 5, 6, 0, 1, 2], 2)
6
>>> RotatedArray.rotated_array_search([3, 4, 5, 6, 0, 1, 2], 3)
0
>>> RotatedArray.rotated_array_search([3, 4, 5, 6, 0, 1, 2], 4)
1
>>> RotatedArray.rotated_array_search([3, 4, 5, 6, 0, 1, 2], 5)
2
>>> RotatedArray.rotated_array_search([3, 4, 5, 6, 0, 1, 2], 6)
3
>>> RotatedArray.rotated_array_search([3, 4, 5, 6, 0, 1, 2], 100)
-1



# Test fully rotated
>>> from problem_2 import RotatedArray
>>> RotatedArray.rotated_array_search([6, 0, 1, 2, 3, 4, 5], 0)
1
>>> RotatedArray.rotated_array_search([6, 0, 1, 2, 3, 4, 5], 1)
2
>>> RotatedArray.rotated_array_search([6, 0, 1, 2, 3, 4, 5], 2)
3
>>> RotatedArray.rotated_array_search([6, 0, 1, 2, 3, 4, 5], 3)
4
>>> RotatedArray.rotated_array_search([6, 0, 1, 2, 3, 4, 5], 4)
5
>>> RotatedArray.rotated_array_search([6, 0, 1, 2, 3, 4, 5], 5)
6
>>> RotatedArray.rotated_array_search([6, 0, 1, 2, 3, 4, 5], 6)
0
>>> RotatedArray.rotated_array_search([6, 0, 1, 2, 3, 4, 5], 100)
-1


# Test large unrotated
>>> from problem_2 import RotatedArray
>>> a = list(range(1000))
>>> RotatedArray.find_pivot(a)
0
>>> RotatedArray.rotated_array_search(a, 50)
50
>>> RotatedArray.rotated_array_search(a, 999)
999
>>> RotatedArray.rotated_array_search(a, 1000)
-1




# Test large
>>> from problem_2 import RotatedArray
>>> a = list(range(500, 1000)) + list(range(0, 500))
>>> RotatedArray.find_pivot(a)
500
>>> RotatedArray.rotated_array_search(a, 50)
550
>>> RotatedArray.rotated_array_search(a, 500)
0
>>> RotatedArray.rotated_array_search(a, 999)
499
>>> RotatedArray.rotated_array_search(a, 1000)
-1









